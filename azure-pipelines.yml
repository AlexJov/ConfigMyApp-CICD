# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
pool:
  #vmImage: 'ubuntu-latest'
  environment:
   name: 'CMA-env'
   resourceType: VirtualMachine
   tags: configmyapp,demo

# Set variables once
variables:
  CMA_CONTROLLER_HOST: configmyappdemo-2044no-uzyczrm0.appd-cx.com
  CMA_CONTROLLER_PORT: 8090
  CMA_USE_HTTPS: false
  CMA_ACCOUNT: customer1
  CMA_USERNAME: appd
  CMA_INCLUDE_SIM: true
  CMA_CONFIGURE_BT: false
  CMA_BT_ONLY: false
  CMA_OVERWRITE_HEALTH_RULES: true
  CMA_INCLUDE_DATABASE : false
  CMA_DATABASE_NAME: ConfigMyApp

steps:
- script: |
    # Write your commands here
    
    LOCATION=$(curl -s https://api.github.com/repos/Appdynamics/ConfigMyApp/releases/latest \
                | grep "tag_name" \
                | awk '{print "https://github.com/Appdynamics/ConfigMyApp/archive/" substr($2, 2, length($2)-3) ".zip"}') \
                ; curl -L -o ConfigMyApp.zip $LOCATION
    
    #ls -ltr
        
    pwd
    
    ls -ltr
    # apt-get install unzip -y
    unzip ConfigMyApp.zip
    cd ConfigMyApp-* 

    #Branding 

    background="https://user-images.githubusercontent.com/2548160/88209855-36123d80-cc4b-11ea-8a46-8bf8bd02bbb5.jpg"
    curl -o "branding/background.jpg" $background 
    logo="https://user-images.githubusercontent.com/2548160/88204707-9a310380-cc43-11ea-9149-561199f144af.png"
    curl -o "branding/logo.png" $logo 


    #if [ "\$CMA_BT_ONLY" = true ] || [ "\$CMA_CONFIGURE_BT" = true ]; then
    #                  cp ${workspace}/bt_config/${params.CMA_APPLICATION_NAME}-configBT.json bt_config/configBT.json
    #                fi
      ./start.sh  --include-database --database-name='tes' --overwrite-health-rules --use-branding --logo-name="logo.png" --background-name="background.jpg"
     # else
     #  ./start.sh  --overwrite-health-rules --use-branding --logo-name="logo.png" --background-name="background.jpg" --debug
     # fi
    echo "End script"
  displayName: 'Run a multi-line script'
